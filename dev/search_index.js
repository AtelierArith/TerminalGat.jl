var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TerminalGat","category":"page"},{"location":"#TerminalGat","page":"Home","title":"TerminalGat","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TerminalGat.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TerminalGat]","category":"page"},{"location":"#TerminalGat.gat-Tuple{AbstractString}","page":"Home","title":"TerminalGat.gat","text":"gat(filename::AbstractString)\n\nHightlight text This is a thin wrapper for gat command written in Go.\n\nif filename is a Markdown, the --render-markdown option is added.\n\nExample\n\njulia> using TerminalGat\njulia> gat(\"README.md\")\njulia> gat(\"src/TerminalGat.jl\")\n\nIf your terminal supports Sixel, you can display images in your terminal\n\njulia> using TerminalGat\njulia> using Plots; plot(sin); savefig(\"sin.png\")\njulia> gat(\"sin.png\")\n\n\n\n\n\n","category":"method"},{"location":"#TerminalGat.gat-Tuple{Markdown.MD}","page":"Home","title":"TerminalGat.gat","text":"gat(md::Markdown.MD)\n\nExample\n\nHightlight docstrings with monokai theme\n\njulia> gat(@doc sin)\n\n\n\n\n\n","category":"method"},{"location":"#TerminalGat.gess-Tuple{AbstractString}","page":"Home","title":"TerminalGat.gess","text":"gess(filename::AbstractString)\n\ngess works something like gat + less:\n\njulia> using TerminalGat\njulia> gess(\"Project.toml\")\n\n\n\n\n\n","category":"method"},{"location":"#TerminalGat.gess-Tuple{Markdown.MD}","page":"Home","title":"TerminalGat.gess","text":"gat(md::Markdown.MD)\n\nExample\n\njulia> gess(@doc sin)\n\n\n\n\n\n","category":"method"}]
}
